-- CREATE DATABASE
DROP DATABASE IF EXISTS `Testing_System_Assignment_3`;
CREATE DATABASE `Testing_System_Assignment_3`;
USE `Testing_System_Assignment_3`;

-- CREATE TABLE: DEPARTMENT
DROP TABLE IF EXISTS `Department`;
CREATE TABLE `Department` (
    DepartmentID TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    DepartmentName NVARCHAR(50) NOT NULL UNIQUE KEY
);

-- CREATE TABLE: POSITION
DROP TABLE IF EXISTS `Position`;
CREATE TABLE `Position` (
    PositionID TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    PositionName ENUM('Dev', 'Scrum Master', 'PM') NOT NULL
);

-- CREATE TABLE: ACCOUNT
DROP TABLE IF EXISTS `Account`;
CREATE TABLE `Account` (
    AccountID TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Email NVARCHAR(50) NOT NULL UNIQUE KEY,
    Username NVARCHAR(50) NOT NULL UNIQUE KEY,
    FullName NVARCHAR(50) NOT NULL,
    DepartmentID TINYINT UNSIGNED NOT NULL,
    PositionID TINYINT UNSIGNED NOT NULL,
    CreateDATE DATETIME DEFAULT NOW(),
    FOREIGN KEY (DepartmentID) REFERENCES `Department` (DepartmentID),
    FOREIGN KEY (PositionID) REFERENCES `Position` (PositionID)
);

-- CREATE TABLE: GROUP
DROP TABLE IF EXISTS `Group`;
CREATE TABLE `Group`(
	GroupID					TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    GroupName				NVARCHAR(50) NOT NULL UNIQUE KEY,
    CreatorID				TINYINT UNSIGNED,
    CreateDATE				DATETIME DEFAULT NOW(),
    FOREIGN KEY(CreatorID) REFERENCES `Account`(AccountID)
);

-- CREATE TABLE: GROUPACCOUNT
DROP TABLE IF EXISTS `GroupAccount`;
CREATE TABLE `GroupAccount` (
    GroupID TINYINT UNSIGNED NOT NULL,
    AccountID TINYINT UNSIGNED NOT NULL,
    JoinDATE DATETIME DEFAULT NOW(),
    PRIMARY KEY(`GroupID`,`AccountID`),
    FOREIGN KEY(GroupID) REFERENCES`Group`(GroupID),
    FOREIGN KEY(AccountID) REFERENCES`Account`(AccountID)
);

-- CREATE TABLE: TYPEQUESTION
DROP TABLE IF EXISTS `TypeQuestion`;
CREATE TABLE `TypeQuestion` (
    TypeID TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    TypeName ENUM('Essay', 'Multiple-Choice') NOT NULL UNIQUE KEY 
);

-- CREATE TABLE: CATEGORYQUESTION
DROP TABLE IF EXISTS `CategoryQuestion`;
CREATE TABLE `CategoryQuestion` (
    CategoryID TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    CategoryName NVARCHAR(50) NOT NULL UNIQUE KEY
);

-- CREATE TABLE: QUESTION
DROP TABLE IF EXISTS `Question`;
CREATE TABLE `Question` (
    QuestionID TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Content NVARCHAR(50) NOT NULL,
    CategoryID TINYINT UNSIGNED NOT NULL,
    TypeID TINYINT UNSIGNED NOT NULL,
    CreatorID TINYINT UNSIGNED NOT NULL,
    CreateDATE DATETIME DEFAULT NOW(),
    FOREIGN KEY (CategoryID) REFERENCES `CategoryQuestion`(CategoryID),
    FOREIGN KEY (TypeID) REFERENCES `TypeQuestion`(TypeID),
    FOREIGN KEY (CreatorID) REFERENCES`Account`(AccountID)
);

-- CREATE TABLE: ANSWER
DROP TABLE IF EXISTS `Answer`;
CREATE TABLE `Answer` (
    Answers TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Content NVARCHAR(50) NOT NULL,
    QuestionID TINYINT UNSIGNED NOT NULL,
    isCorrect BIT DEFAULT 1,
    FOREIGN KEY (QuestionID) REFERENCES `Question`(QuestionID)
);

-- CREATE TABLE: EXAM
DROP TABLE IF EXISTS `Exam`;
CREATE TABLE `Exam` (
    ExamID TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `Code` CHAR(10) NOT NULL,
    Title NVARCHAR(50) NOT NULL,
    CategoryID TINYINT UNSIGNED NOT NULL,
    Duration TINYINT UNSIGNED NOT NULL,
    CreatorID TINYINT UNSIGNED NOT NULL,
    CreateDATE DATETIME DEFAULT NOW(),
    FOREIGN KEY (CategoryID) REFERENCES `CategoryQuestion`(CategoryID),
    FOREIGN KEY (CreatorID) REFERENCES`Account`(AccountID)
);

-- CREATE TABLE: EXAMQUESTION
DROP TABLE IF EXISTS `ExamQuestion`;
CREATE TABLE `ExamQuestion` (
    ExamID TINYINT UNSIGNED NOT NULL,
    QuestionID TINYINT UNSIGNED NOT NULL,
    PRIMARY KEY(ExamID, QuestionID),
    FOREIGN KEY (QuestionID) REFERENCES `Question`(QuestionID),
    FOREIGN KEY (ExamID) REFERENCES `Exam`(ExamID)
);